<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.summer</groupId>
	<artifactId>summer-build</artifactId>
	<version>${rversion}</version>
	<packaging>pom</packaging>
	<name>build</name>
	<description>build of all projectes</description>

	<modules>
		<module>java-dependencies</module>
		<module>java-parent</module>
		<module>java-projectes</module>
		<module>spring-family</module>
		<module>maven-projects</module>
	</modules>

	<properties>
	    <rversion>0.0.1-SNAPSHOT</rversion>
	    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	    <java.version>1.8</java.version>
<!-- 	    <main.basedir>${basedir}</main.basedir> -->
	</properties>

	<build>
		<resources>
			<resource>
				<directory>src/main/resource</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.yml</include>
					<include>**/*.yaml</include>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resource</directory>
				<filtering>false</filtering>
				<excludes>
					<exclude>**/*.yml</exclude>
					<exclude>**/*.yaml</exclude>
					<exclude>**/*.properties</exclude>
					<exclude>**/*.xml</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.yml</include>
					<include>**/*.yaml</include>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<excludes>
					<exclude>**/*.yml</exclude>
					<exclude>**/*.yaml</exclude>
					<exclude>**/*.properties</exclude>
					<exclude>**/*.xml</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/config</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.yml</include>
					<include>**/*.yaml</include>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/config</directory>
				<filtering>false</filtering>
				<excludes>
					<exclude>**/*.yml</exclude>
					<exclude>**/*.yaml</exclude>
					<exclude>**/*.properties</exclude>
					<exclude>**/*.xml</exclude>
				</excludes>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<!-- 指定maven编译的jdk版本,如果不指定,maven3默认用jdk 1.5 maven2默认用jdk1.3 -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<!-- 一般而言，target与source是保持一致的，但是，有时候为了让程序能在其他版本的jdk中运行(对于低版本目标jdk，源代码中不能使用低版本jdk中不支持的语法)，会存在target不同于source的情况 -->
					<source>1.8</source> <!-- 源代码使用的JDK版本 -->
					<target>1.8</target> <!-- 需要生成的目标class文件的编译版本 -->
					<encoding>UTF-8</encoding><!-- 字符集编码 -->
					<skipTests>true</skipTests><!-- 跳过测试 -->
					<verbose>true</verbose>
					<showWarnings>true</showWarnings>
					<!-- <fork>true</fork>要使compilerVersion标签生效，还需要将fork设为true，用于明确表示编译版本配置的可用 
						<executable>path-to-javac </executable>使用指定的javac命令，例如：<executable>${JAVA_1_4_HOME}/bin/javac</executable> 
						<compilerVersion>1.3</compilerVersion>指定插件将使用的编译器的版本 <meminitial>128m</meminitial>编译器使用的初始内存 
						<maxmem>512m</maxmem>编译器使用的最大内存 <compilerArgument>-verbose -bootclasspath 
						${java.home}\lib\rt.jar</compilerArgument> 这个选项用来传递编译器自身不包含但是却支持的参数选项 -->
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<!-- 内部开发版本发布库，这个必须配置，若不配置中央仓库的话，发布不了 -->
	<distributionManagement>
		<repository>
			<id>maven-releases</id>
			<name>maven-releases</name>
			<url>http://127.0.0.1:8081/repository/maven-releases/</url>
		</repository>
		<snapshotRepository>
			<id>maven-snapshots</id>
			<name>maven-snapshots</name>
			<url>http://127.0.0.1:8081/repository/maven-snapshots/</url>
		</snapshotRepository>
	</distributionManagement>
</project>